<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="management.student.repository.StudentRepository">
  <!-- StudentCourseとApplicationStatusとのマッピング -->
  <resultMap id="StudentCourseMap" type="management.student.data.StudentCourse">
    <id column="id" property="id"/>
    <result column="student_id" property="studentId"/>
    <result column="course_name" property="courseName"/>
    <result column="start_date" property="startDate"/>
    <result column="end_date" property="endDate"/>
    <!-- associationの設定 -->
    <association property="applicationStatus" javaType="management.student.data.ApplicationStatus">
      <id column="status_id" property="id"/>
      <result column="student_course_id" property="studentCourseId"/>
      <result column="status" property="status"/>
    </association>
  </resultMap>

  <!-- SQLフラグメント -->
  <sql id="BaseColumnList">
    name, furigana, nickname, age, phone_number, gender, remarks, email, region
  </sql>

  <!-- 受講生全件検索(絞り込み検索) -->
  <select id="searchStudentList" resultType="management.student.data.Student">
    SELECT * FROM student WHERE delete_flag = 0
    <if test="id != null">
      AND id = #{id}
    </if>
    <if test="name != null and name != ''">
      AND name LIKE CONCAT('%', #{name}, '%')
    </if>
    <if test="furigana != null and furigana != ''">
      AND furigana LIKE CONCAT('%', #{furigana}, '%')
    </if>
    <if test="email != null and email != ''">
      AND email LIKE CONCAT('%', #{email}, '%')
    </if>
    <if test="phoneNumber != null and phoneNumber != ''">
      AND phone_number = #{phoneNumber}
    </if>
    <if test="age != null">
      AND age = #{age}
    </if>
  </select>

  <!-- 受講生1件検索 -->
  <select id="searchStudentByID" parameterType="int" resultType="management.student.data.Student">
    SELECT * FROM student WHERE id = #{id} AND delete_flag = 0
  </select>

  <!-- 受講生コース全件検索 -->
  <select id="searchStudentCourseList" resultType="management.student.data.StudentCourse">
    SELECT * FROM student_courses
  </select>

  <!-- 受講生コース1件検索 -->
  <select id="searchStudentCourseByID" parameterType="int"
    resultType="management.student.data.StudentCourse">
    SELECT * FROM student_courses WHERE student_id = #{studentId}
  </select>

  <!-- 申込状況全件検索 -->
  <select id="searchApplicationStatusList" resultType="management.student.data.ApplicationStatus">
    SELECT * FROM application_status
  </select>

  <!-- 申込状況1件検索 -->
  <select id="searchApplicationStatusByID" parameterType="int"
    resultType="management.student.data.ApplicationStatus">
    SELECT * FROM application_status WHERE id = #{id}
  </select>


  <!-- StudentCourseをStudentId指定で検索するクエリ -->
  <select id="searchStudentCourseWithStatus" parameterType="int" resultMap="StudentCourseMap">
    SELECT sc.*, appStatus.id AS status_id, student_course_id, status
    FROM student_courses sc
    LEFT JOIN application_status appStatus ON sc.id = appStatus.student_course_id
    WHERE 1=1
    <if test="studentId != null">
      AND sc.student_id = #{studentId}
    </if>
    <if test="courseName != null">
      AND sc.course_name = #{courseName}
    </if>
    <if test="startDate != null">
      AND sc.start_date &gt;= #{startDate}
    </if>
    <if test="endDate != null">
      AND sc.end_date &lt;= #{endDate}
    </if>
    <if test="status != null">
      AND appStatus.status = #{status}
    </if>
  </select>

  <!-- 受講生登録 -->
  <insert id="createStudent" parameterType="management.student.data.Student" useGeneratedKeys="true"
    keyProperty="id">
    INSERT INTO student (
    <include refid="BaseColumnList"/>
    ) VALUES (
    #{name},
    #{furigana},
    #{nickname},
    #{age},
    #{phoneNumber},
    #{gender},
    #{remarks},
    #{email},
    #{region}
    )
  </insert>

  <!-- 受講生コース登録 -->
  <insert id="createStudentCourse" parameterType="management.student.data.StudentCourse"
    useGeneratedKeys="true"
    keyProperty="id">
    INSERT INTO student_courses (
    student_id,
    course_name,
    start_date,
    end_date
    ) VALUES (
    #{studentId},
    #{courseName},
    #{startDate},
    #{endDate}
    )
  </insert>

  <!-- 申込状況登録 -->
  <insert id="createApplicationStatus" parameterType="management.student.data.ApplicationStatus"
    useGeneratedKeys="true" keyProperty="id">
    INSERT INTO application_status (
    student_course_id,
    status
    ) VALUES (
    #{studentCourseId},
    #{status}
    )
  </insert>

  <!-- 受講生更新 -->
  <update id="updateStudent" parameterType="management.student.data.Student">
    UPDATE student
    SET
    name = #{name},
    furigana = #{furigana},
    nickname = #{nickname},
    age = #{age},
    phone_number = #{phoneNumber},
    gender = #{gender},
    remarks = #{remarks},
    email = #{email},
    region = #{region},
    delete_flag = #{deleteFlag}
    WHERE id = #{id}
  </update>
  <!-- 受講生コース更新 -->
  <update id="updateStudentCourse" parameterType="management.student.data.StudentCourse">
    UPDATE student_courses
    SET
    course_name = #{courseName}
    WHERE id = #{id}
  </update>

  <!-- 申込状況更新 -->
  <update id="updateApplicationStatus" parameterType="management.student.data.ApplicationStatus"
    useGeneratedKeys="true"
    keyProperty="id">
    UPDATE application_status
    SET
    status = #{status}
    WHERE id = #{id}
  </update>

  <!-- 申込状況削除 -->
  <delete id="deleteApplicationStatus" parameterType="int">
    DELETE FROM application_status
    WHERE id = #{id}
  </delete>

</mapper>
